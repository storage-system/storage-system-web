/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/sessions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['AuthenticateController_handle']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/companies': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['CompanyController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/companies/{companyId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['CompanyController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/companies/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['CompanyController_delete']
    options?: never
    head?: never
    patch: operations['CompanyController_update']
    trace?: never
  }
  '/api/companies/{id}/assign-user': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations['CompanyController_assignUser']
    trace?: never
  }
  '/api/companies/{id}/remove-users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['CompanyController_removeUsers']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/categories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['CategoryController_list']
    put?: never
    post: operations['CategoryController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/categories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['CategoryController_delete']
    options?: never
    head?: never
    patch: operations['CategoryController_update']
    trace?: never
  }
  '/api/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['UserController_list']
    put?: never
    post: operations['UserController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['UserController_delete']
    options?: never
    head?: never
    patch: operations['UserController_update']
    trace?: never
  }
  '/api/products': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['ProductController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/products/company/{companyId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['ProductController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/products/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['ProductController_getById']
    put?: never
    post?: never
    delete: operations['ProductController_delete']
    options?: never
    head?: never
    patch: operations['ProductController_update']
    trace?: never
  }
  '/api/configurations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['ConfigurationController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/configurations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['ConfigurationController_getConfiguration']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations['ConfigurationController_update']
    trace?: never
  }
  '/api/styles': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['StyleController_list']
    put?: never
    post: operations['StyleController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/styles/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['StyleController_getById']
    put?: never
    post?: never
    delete: operations['StyleController_delete']
    options?: never
    head?: never
    patch: operations['StyleController_update']
    trace?: never
  }
  '/api/styles/{id}/active-style': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations['StyleController_chooseActiveStyle']
    trace?: never
  }
  '/api/files/upload': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['FileController_uploadFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/files/url/{fileId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['FileController_getFileUrl']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/files/download/{fileId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['FileController_downloadFile']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/files/delete/{fileId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['FileController_deleteFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/metrics/{userId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['MetricsController_productMetrics']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    AuthenticateDTO: {
      /** Format: email */
      email: string
      password: string
    }
    CreateAccountDTO: {
      name: string
      /** Format: email */
      email: string
      contact: string
      responsible: string
      password: string
      users?: string[]
    }
    EditCompanyDTO: {
      name?: string
      email?: string
      contact?: string
      responsible?: string
    }
    RemoveUsersDTO: {
      userIds: string[]
    }
    CreateCategoryDTO: {
      name: string
      isActive: boolean
      /** Format: uuid */
      companyId: string
      /** Format: uuid */
      fileId?: string
    }
    HttpEachCategoryListResponse: {
      /** @example a2c66c35-d553-4851-8ff3-9edacffb2395 */
      id: string
      name: string
      isActive?: boolean
      iconId: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
    }
    HttpCategoryListResponse: {
      total: number
      perPage: number
      page: number
      items: components['schemas']['HttpEachCategoryListResponse'][]
    }
    EditCategoryDTO: {
      name?: string
      isActive?: boolean
    }
    CreateUserDTO: {
      name: string
      /** Format: email */
      email: string
      password: string
      phone: string
      roles: ('ADMIN' | 'MANAGER' | 'DIRECTOR' | 'RESPONSIBLE' | 'MEMBER')[]
    }
    UpdateUserDTO: {
      name?: string
      /** Format: email */
      email?: string
      password?: string
      phone?: string
      roles?: ('ADMIN' | 'MANAGER' | 'DIRECTOR' | 'RESPONSIBLE' | 'MEMBER')[]
    }
    CreateProductDTO: {
      name: string
      description: string
      originalPrice: number
      finalPrice: number
      discountPercentage: number
      quantityInStock: number
      manufactureDate: string
      validityInDays: number
      unitOfMeasure: string
      weight: number
      dimensions_height: string
      dimensions_width: string
      dimensions_depth: string
      manufacturer?: string
      batch?: string
      /** @enum {string} */
      status: 'ACTIVE' | 'INACTIVE' | 'OUT_OF_STOCK'
      /** Format: uuid */
      companyId: string
      categoryIds: string[]
    }
    HttpItemResponse: {
      /** @example 385a99b7-b6c6-4fcf-97ff-75aa838a2f6c */
      id: string
      /** @example Nathan Mann */
      name: string
    }
    HttpEachProductListResponse: {
      /** @example 4dc33846-185d-45b2-badf-4e8a4be70a0d */
      id: string
      name: string
      quantityInStock: number
      /** Format: date-time */
      manufactureDate: string
      /** Format: date-time */
      dueDate: string
      validityInDays: number
      manufacturer: string
      batch: string
      /** @example ACTIVE */
      status: string
      productImage: string
      categories: components['schemas']['HttpItemResponse'][]
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
      /** Format: date-time */
      deletedAt?: string
    }
    HttpProductListResponse: {
      total: number
      perPage: number
      page: number
      items: components['schemas']['HttpEachProductListResponse'][]
    }
    HttpProductGetResponse: {
      /** @example 6e513752-ac99-45cf-882a-495d3c155b3e */
      id: string
      name: string
      description: string
      originalPrice: number
      finalPrice: number
      discountPercentage: number
      quantityInStock: number
      /** Format: date-time */
      manufactureDate: string
      /** Format: date-time */
      dueDate: string
      validityInDays: number
      unitOfMeasure: string
      weight: number
      manufacturer: string
      batch: string
      /** @example ACTIVE */
      status: string
      productImage: string
      categories: components['schemas']['HttpItemResponse'][]
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
      /** Format: date-time */
      deletedAt?: string
    }
    UpdateProductDTO: {
      name?: string
      description?: string
      originalPrice?: number
      finalPrice?: number
      discountPercentage?: number
      quantityInStock?: number
      manufactureDate?: string
      validityInDays?: number
      unitOfMeasure?: string
      weight?: number
      dimensions_height?: string
      dimensions_width?: string
      dimensions_depth?: string
      manufacturer?: string
      batch?: string
      /** @enum {string} */
      status?: 'ACTIVE' | 'INACTIVE' | 'OUT_OF_STOCK'
      categoryIds?: string[]
    }
    CreateConfigurationDTO: {
      /** Format: uuid */
      userId: string
      /** Format: uuid */
      companyId: string
      daysBeforeOldStock: number
      warningDays: number
      emailNotification: boolean
      systemNotification: boolean
      autoDiscardAfterExpiration: boolean
      freeShippingOnOldStock: boolean
      /** @enum {string} */
      reportFrequency: 'diary' | 'weekly' | 'month' | 'year'
    }
    HttpConfigurationGetResponse: {
      /** @example 8f05987e-be82-4426-9b0c-7cf5cd91c2e6 */
      id: string
      /** @example d0e95d0c-9b53-40de-8e5e-8be2bcd55de3 */
      userId: string
      /** @example 1aefaf75-7303-4584-a531-77ded765bbfa */
      companyId: string
      daysBeforeOldStock: number
      warningDays: number
      emailNotification: boolean
      systemNotification: boolean
      autoDiscardAfterExpiration: boolean
      freeShippingOnOldStock: boolean
      /** @example diary */
      reportFrequency: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
    }
    UpdateConfigurationDTO: {
      daysBeforeOldStock?: number
      warningDays?: number
      emailNotification?: boolean
      systemNotification?: boolean
      autoDiscardAfterExpiration?: boolean
      freeShippingOnOldStock?: boolean
      /** @enum {string} */
      reportFrequency?: 'diary' | 'weekly' | 'month' | 'year'
    }
    CreateStyleDTO: {
      /** Format: uuid */
      companyId: string
      name: string
      /** @default false */
      isActive: boolean
      backgroundColor: string
      textColor: string
      primaryColor: string
      secondaryColor: string
      tertiaryColor: string
    }
    HttpEachStyleListResponse: {
      /** @example 175ca594-7aa7-4bb6-865a-ffcf1c163349 */
      id: string
      /** @example af34f4ce-3c01-4792-a06f-5219b054ec22 */
      companyId: string
      name: string
      isActive?: boolean
      backgroundColor: string
      textColor: string
      primaryColor: string
      secondaryColor: string
      tertiaryColor: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
    }
    HttpStyleListResponse: {
      total: number
      perPage: number
      page: number
      items: components['schemas']['HttpEachStyleListResponse'][]
    }
    HttpStyleGetResponse: {
      /** @example 49570e5a-d487-4eac-b634-c9a6b26a8007 */
      id: string
      /** @example 9716d87a-05da-44d2-807d-a8b40f16c6ec */
      companyId: string
      name: string
      isActive?: boolean
      backgroundColor: string
      textColor: string
      primaryColor: string
      secondaryColor: string
      tertiaryColor: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
    }
    UpdateStyleDTO: {
      name?: string
      backgroundColor?: string
      textColor?: string
      primaryColor?: string
      secondaryColor?: string
      tertiaryColor?: string
    }
    HttpFileCreatedResponse: {
      /** @example 549a3b74-3e57-4a62-83db-7bebe8565d59 */
      id: string
    }
    HttpGetFileUrlResponse: {
      /** @example string */
      fileUrl: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  AuthenticateController_handle: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AuthenticateDTO']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAccountDTO']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_list: {
    parameters: {
      query?: never
      header?: never
      path: {
        companyId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EditCompanyDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_assignUser: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CompanyController_removeUsers: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RemoveUsersDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CategoryController_list: {
    parameters: {
      query: {
        page: number
        perPage: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpCategoryListResponse']
        }
      }
    }
  }
  CategoryController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCategoryDTO']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CategoryController_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  CategoryController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EditCategoryDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UserController_list: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UserController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateUserDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UserController_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UserController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateUserDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateProductDTO']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductController_list: {
    parameters: {
      query?: never
      header?: never
      path: {
        companyId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpProductListResponse']
        }
      }
    }
  }
  ProductController_getById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpProductGetResponse']
        }
      }
    }
  }
  ProductController_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateProductDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ConfigurationController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateConfigurationDTO']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ConfigurationController_getConfiguration: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpConfigurationGetResponse']
        }
      }
    }
  }
  ConfigurationController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateConfigurationDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StyleController_list: {
    parameters: {
      query?: {
        perPage?: number
        page?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpStyleListResponse']
        }
      }
    }
  }
  StyleController_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateStyleDTO']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StyleController_getById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpStyleGetResponse']
        }
      }
    }
  }
  StyleController_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StyleController_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateStyleDTO']
      }
    }
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  StyleController_chooseActiveStyle: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  FileController_uploadFile: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpFileCreatedResponse']
        }
      }
    }
  }
  FileController_getFileUrl: {
    parameters: {
      query?: never
      header?: never
      path: {
        fileId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HttpGetFileUrlResponse']
        }
      }
    }
  }
  FileController_downloadFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        fileId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  FileController_deleteFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        fileId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  MetricsController_productMetrics: {
    parameters: {
      query?: never
      header?: never
      path: {
        userId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
